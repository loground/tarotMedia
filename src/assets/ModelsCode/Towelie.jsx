/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: snOOpy (https://sketchfab.com/snOOpy_OO)
License: CC-BY-NC-ND-4.0 (http://creativecommons.org/licenses/by-nc-nd/4.0/)
Source: https://sketchfab.com/3d-models/towelie-68ab546039ba40b4a1246bd086079755
Title: Towelie
*/

import React, { useEffect, useRef } from 'react';
import * as THREE from 'three';
import { useGLTF, useAnimations } from '@react-three/drei';

export function TowelieAnim({ actionName, playbackRate = 1, ...props }) {
  const group = useRef();
  const { nodes, materials, animations } = useGLTF('/models/towelie-opt.glb');
  const { actions, mixer } = useAnimations(animations, group);

  useEffect(() => {
    // Pick the requested action, or fall back to the first available clip.
    const defaultKey = Object.keys(actions)[0];
    const key = actionName && actions[actionName] ? actionName : defaultKey;
    if (!key) return; // no clips in the file

    const action = actions[key];

    // Loop forever and play
    action.reset();
    action.setLoop(THREE.LoopRepeat, Infinity);
    action.clampWhenFinished = false;
    action.enabled = true;
    action.timeScale = playbackRate; // speed (1 = normal)
    action.fadeIn(0.2).play();

    return () => {
      // Clean up nicely
      action.fadeOut(0.2);
      // Let the fade finish before stopping (optional micro-timeout)
      const t = setTimeout(() => action.stop(), 220);
      return () => clearTimeout(t);
    };
  }, [actions, actionName, playbackRate]);

  // Optional: if you ever want to pause/resume globally
  // mixer.timeScale = 1; // running; set to 0 to pause everything

  return (
    <group ref={group} {...props} dispose={null} scale={0.55} rotation-y={Math.PI}>
      <group name="Sketchfab_Scene">
        {/* If your GLB has a skeleton root joint, keep it */}
        {nodes._rootJoint && <primitive object={nodes._rootJoint} />}
        <skinnedMesh
          name="Object_7"
          geometry={nodes.Object_7.geometry}
          material={materials['Scene_-_Root']}
          skeleton={nodes.Object_7.skeleton}
          position={[0.025, 0, -0.383]}
          rotation={[Math.PI, 0, -Math.PI]}
        />
      </group>
    </group>
  );
}

useGLTF.preload('/models/towelie-opt.glb');
